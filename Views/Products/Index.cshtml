@model IEnumerable<applicationmvc.Models.Product>

@{
    ViewData["Title"] = "Товары";

    string Truncate(string value, int maxLength)
    {
        if (string.IsNullOrEmpty(value)) return value;
        return value.Length <= maxLength ? value : value.Substring(0, maxLength) + "...";
    }
}

<h1>Товары</h1>

@if (User.Identity.IsAuthenticated)
{
    <p>
        <a asp-action="Create">Добавить товар</a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().Name)</th>
            <th>@Html.DisplayNameFor(model => model.First().Description)</th>
            <th>@Html.DisplayNameFor(model => model.First().Price)</th>
            <th>Категория</th>
            <th>Поставщик</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Truncate(item.Name, 25)</td>
                <td>@Truncate(item.Description, 25)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>@Truncate(item.ProductCategory?.CategoryName ?? "No Category", 25)</td>
                <td>@Truncate(item.Supplier?.SupplierName ?? "No Supplier", 25)</td>
                <td>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <text>
                            <a href="@Url.Action("Edit", new { id = item.ProductId })">Редактировать</a> |
                            <a href="@Url.Action("Details", new { id = item.ProductId })">Детали</a> |
                            <a href="@Url.Action("Delete", new { id = item.ProductId })">Удалить</a>
                        </text>
                    }
                    else
                    {
                        <a href="@Url.Action("Details", new { id = item.ProductId })">Детали</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
